<?php
//require_once 'PointInterface.php';
//require_once 'Point.php';
//require_once 'Circle1.php';
//require_once 'Calculate.php';
//require_once 'Rectangle1.php';
//require_once

use  app\lib\Library;

/**
 * в параметр приходит имя класса вместе с пространством именн
 * @param $class
 */
function auto_load($class) //наша функция для автозагрузки
{
    $str = $_SERVER['DOCUMENT_ROOT'] . '/';
    $str = str_replace('\\','/', $class);// меняем слэши в пути
    $str .=  '.php';

    if (is_file($str)){

        require_once  $str;

    }


}

spl_autoload_register('auto_load');    //функция автозагрузки

//$user = new Circle1(5,4,2);


//echo '<br>';

$lib = new Library();
//$obj->run(); // вызываем метод trait
//echo $obj;
//$user = new Circle();
//$user1 = new User();
/*
$c = new Circle1(2,4,20);
echo $c->area() . '<br/>';


echo Calculate::divided(5,5) .'<br/>';

$arItems = [];

$arItems[] = new Circle1(2,4,50);
$arItems[] = new Circle1(2,4,10);
$arItems[] = new Rectangle1(2,4,100,50);

$total = 0;
foreach ($arItems as $item){
   $total += $item->area();

}

echo $total. '<br/>';
*/

//**************************************************************************************************
//
// полиморфизм - это способность обьекта использовать методы производного класса,
// который не существует  на момент создания базовых.

//ключевое слово trait (реализует 'горизонтальное наследование')
// trait - это механизм повторного использования кода в языках с поддержкой только одиночного наследования ( php )

                           // В трэйте
// - может содержатьсья обычные методы
// - могут содержаться абстрактные методы  и тогда класс содержащий эти методы обязан их реализовать
//- может содержаться свойствоа, тогда класс использующий trait не может у себя обьявить у свойства с таким же именем а должен использовать свойства трэйта

// - могут содержаться статические свойства и методы

//-  можно использовать указатель this и этот указатель и этот указатель будет относиться к тому обьекту который использует трэйт

// - могут использоваться другие трэйты

// -  несколько трэйт-ов могут быть вставленны в класс путем их перечисления в дерективе  use путем их перечисления через запятую


//***************************************************************************************
// - магические методы спец. классы зарезервированные в php для опр. повед. в конкретных ситуациях
//все магические методы должны быть publish








